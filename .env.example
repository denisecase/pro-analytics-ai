# .env.example
# This file is used to set environment variables for the application.
# Copy to .env and update as needed
# IMPORTANT: Make sure .env is listed in .gitignore
# to avoid committing sensitive information to version control.

# These variables are used by backend/utils/config.py

# Environment name: dev (local), test, prod (Lambda, etc.)
ENV=dev

# Specify LLM Provider: EITHER openai OR openrouter
LLM_PROVIDER=openrouter

# Required if using OpenRouter (free LLM gateway with many models)
# Get your key at: https://openrouter.ai/account
# This key starts with `or-` and is used for calling OpenRouter-compatible models
OPENROUTER_API_KEY=or-xxx

# Required if using OpenAI 
# You can get your key from https://platform.openai.com/account/api-keys
# Make sure to keep this key secret and do not share it publicly.
OPENAI_API_KEY=sk-your-key-goes-here

# OpenAI model to use for generation (shared by both OpenAI and OpenRouter)
OPENAI_MODEL=gpt-3.5-turbo

# OpenAI function calling model to use for generation
EMBEDDING_MODEL=all-MiniLM-L6-v2

# The name of the vector database to use for storing and retrieving embeddings
# Options: chroma, pinecone, weaviate
VECTOR_DB=chroma


# ============ AWS LAMBDA INSTRUCTIONS ============

# In the AWS Lambda Console:
# - Go to your function
# - Click "Configuration" > "Environment Variables"
# - Add the following key-value pairs:
#
#   Key:    ENV                  Value: prod
#   Key:    OPENAI_API_KEY       Value: sk-xxxxxxxxxxxxxxxx
#   Key:    OPENAI_MODEL         Value: gpt-3.5-turbo
#   Key:    EMBEDDING_MODEL      Value: all-MiniLM-L6-v2
#   Key:    VECTOR_DB            Value: chroma

# Or use AWS CLI:
# aws lambda update-function-configuration \
#   --function-name your-function-name \
#   --environment "Variables={ENV=prod,OPENAI_API_KEY=sk-xxx,...}"